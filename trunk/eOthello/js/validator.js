//Funciones para validar cada formulario//Valida el formulario para registrarsefunction checkRegister() {	var u;	var p1;	var p2;	var em;	var ret = true;		// Tomamos los valores de los campos del formulario	u = document.getElementById("username").value;	p1 = document.getElementById("password").value;	p2 = document.getElementById("password2").value;	em = document.getElementById("email").value;	// refresca (Por si ha habido una llamada anterior a la función. Se necesita	// para que no subraye como errores cosas que lo eran en la llamada anterior	// pero que en la nueva llamada no lo son)	document.getElementById("userlabel").className = "none";	document.getElementById("p1label").className = "none";	document.getElementById("p2label").className = "none";	document.getElementById("maillabel").className = "none";	// Errores sintácticos referidos al usuario el password y el email	var userError = checkUser(u);	var passError = checkPass(p1, p2);	var emailError = checkMail(em);	// Si se ha producido error, lo escribe	if (userError + passError + emailError)	{		document.getElementById("userError").innerHTML = userError;		document.getElementById("passError").innerHTML = passError;		document.getElementById("emailError").innerHTML = emailError;		// Ponemos el valor a vacio, para que la contraseña no permanezca en el		// campo de texto si ha habido un error		document.getElementById("password").value = "";		document.getElementById("password2").value = "";		ret = false;	}	return ret;}// Valida el formulario de contraseña perdidafunction checkLost() {	var u;	var em;	var ret = true;	// Tomamos los valores de los campos del formulario	u = document.getElementById("username").value;	em = document.getElementById("email").value;		// refresca (Por si ha habido una llamada anterior a la función. Se necesita	// para que no subraye como errores cosas que lo eran en la llamada anterior	// pero que en la nueva llamada no lo son)	document.getElementById("userlabel").className = "none";	document.getElementById("maillabel").className = "none";		// Errores sitácticos referentes a usuario y email	var userError = checkUser(u);	var emailError = checkMail(em);		// Si se ha producido error, lo escribe	if (userError + emailError) 	{		document.getElementById("userError").innerHTML = userError;		document.getElementById("emailError").innerHTML = emailError;		ret = false;	}	return ret;}// Valida el formulario de cambio de contraseñafunction checkChange() {	var p1;	var p2;	var p3;	var ret = true;	// Tomamos los valores de los campos del formulario	p1 = document.getElementById("oldpassword").value;	p2 = document.getElementById("password").value;	p3 = document.getElementById("password2").value;	// refresca (Por si ha habido una llamada anterior a la función. Se necesita	// para que no subraye como errores cosas que lo eran en la llamada anterior	// pero que en la nueva llamada no lo son)	document.getElementById("p0label").className = "none";	document.getElementById("p1label").className = "none";	document.getElementById("p2label").className = "none";	// Errores referentes al Current Password	var p0Error = _checkPass(p1);	// Errores referentes al New Password y re-type new password	var p1Error = checkPass(p2, p3);	// Si se ha producido error, lo escribe	if (p0Error + p1Error) 	{		document.getElementById("passError").innerHTML = p0Error;		document.getElementById("pass2Error").innerHTML = p1Error;		// Ponemos el valor a vacio, para que la contraseña no permanezca en el		// campo de texto si ha habido un error		document.getElementById("oldpassword").value = "";		document.getElementById("password").value = "";		document.getElementById("password2").value = "";		ret = false;	}	return ret;}function checkLogin() {	u = document.getElementById("username").value;	p = document.getElementById("password").value;	errors = checkUserL(u) + _checkPassL(p);	if (errors) 	{		document.getElementById("loginError").innerHTML = '<ul>' + errors + '</ul>';		return false;	}	return true;}function _checkPassL(p) {	var error = "";	// Contraseña con menos de 6 carácteres	if (p.length < 6) 	{		error = "<li>At least 6 characters</li>";	}	else 	{		// Contraseña con mas de 15 carácteres		if (p.length > 15) 		{			error = "<li>Less than 15 characters.</li>";		}		else 		{			// Contraseña con carácteres inválidos. Se admiten los mismo			// carácteres que en el usuario			reg = /^[A-Za-z0-9_\-]*$/;			if (!reg.test(p)) 			{				error = "<li>Invalid character</li>";			}		}	}	return error;}// valida el usuariofunction checkUserL(u) {	var error = "";		// usuario con menos de 3 carácteres	if (u.length < 3) 	{		error = "<li>At least 3 characters</li>";	}	// usuario con mas de 30 carácteres	else 	{		if (u.length > 30) 		{			error = "<li>Less than 30 characters</li>";		}		else 		{			// usuario que usa carácteres inválidoos. Puede usar carácteres			// alfanuméricos el símbolo - y el _			var reg = /^[A-Za-z0-9_\-]*$/;						if (!reg.test(u)) 			{				error = "<li>Invalid character</li>";			}		}	}	return error;}// Funciones para validar cada tipo de datos en los formulariosfunction checkPass(p1, p2) {	var error = "";		// Contraseñas distintas	if (p1 != p2) 	{		document.getElementById("p1label").className = "error";		error = "<b>Passwords don't match</b>";	}	else 	{		// Contraseña con menos de 6 carácteres		if (p1.length < 6) 		{			document.getElementById("p1label").className = "error";			error = "<b>At least 6 characters</b>";		}		else 		{			// Contraseña con mas de 15 carácteres			if (p1.length > 15) 			{				document.getElementById("p1label").className = "error";				error = "<b>Less than 15 characters</b>";			}			else 			{				// Contraseña con carácteres inválidos. Se admiten los mismo				// carácteres que en el usuario				reg = /^[A-Za-z0-9_\-]*$/;				if (!reg.test(p1)) 				{					document.getElementById("p1label").className = "error";					error = "<b>Invalid character</b>";				}			}		}	}	return error;}// esta funcion solo se usa para validar el current password del formulario del// changepasswordfunction _checkPass(p) {	var error = "";		// Contraseña con menos de 6 carácteres	if (p.length < 6) 	{		document.getElementById("p0label").className = "error";		error = "<b>At least 6 characters</b>";	}	else 	{		// Contraseña con mas de 15 carácteres		if (p.length > 15) 		{			document.getElementById("p0label").className = "error";			error = "<b>Less than 15 characters.</b>";		}		else 		{			// Contraseña con carácteres inválidos. Se admiten los mismo			// carácteres que en el usuario			reg = /^[A-Za-z0-9_\-]*$/;			if (!reg.test(p)) 			{				document.getElementById("p0label").className = "error";				error = "<b>Invalid character</b>";			}		}	}	return error;}// valida el usuariofunction checkUser(u) {	var error = "";	// usuario con menos de 3 carácteres	if (u.length < 3) 	{		document.getElementById("userlabel").className = "error";		error = "<b>At least 3 characters</b>";	}	// usuario con mas de 30 carácteres	else 	{		if (u.length > 30) 		{			document.getElementById("userlabel").className = "error";			error = "<b>Less than 30 characters</b>";		}		else 		{			// usuario que usa carácteres inválidoos. Puede usar carácteres			// alfanuméricos el símbolo - y el _			var reg = /^[A-Za-z0-9_\-]*$/;						if (!reg.test(u)) 			{				document.getElementById("userlabel").className = "error";				error = "<b>Invalid character</b>";			}		}	}		return error;}// funcion para validar el emailfunction checkMail(em) {	var error = "";		// Valida el email	reg = /^(.+)@(.+)\.(.{2,3})$/;	if (!reg.test(em)) 	{		document.getElementById("maillabel").className = "error";		error = "<b>Invalid e-mail</b>";	}	return error;}// Validación dinámica de usuariofunction dinamicUserV() {	u = document.getElementById("username").value;	// Dependiendo de si el usuario q está escrito asta el momento es válido o	// no, el nombre de la clase asociada a dicho campo será uno u otro	if (checkUser(u)) 	{		if (u == "") 		{			document.getElementById("username").className = "";		}		else 		{			document.getElementById("username").className = "dinamicError";		}	}	else 	{		document.getElementById("username").className = "dinamicVal";		document.getElementById("userlabel").className = "none";	}}// Hay 3 dinamicPassV, porque para no requerimos el mismo tipo de validacion o// los nombres de los identificadores no son los mismos para cada pwd de cada// formulario// Función que valida el password dinamicamente y va diciendo lafortaleza de la// contraseñafunction dinamicPassV() {	p = document.getElementById("password").value;	if (checkPass(p, p)) 	{		if (p == "") 		{			document.getElementById("password").className = "";		}		else 		{			document.getElementById("password").className = "dinamicError";		}	}	else 	{		document.getElementById("password").className = "dinamicVal";		document.getElementById("p1label").className = "none";	}		p2 = document.getElementById("password2").value;		if (p != p2) 	{		document.getElementById("password2").className = "dinamicError";	}	else 	{		document.getElementById("password2").className = "dinamicVal";		document.getElementById("p1label").className = "none";	}	// Fortaleza de una contraseña	strength = checkStrength(p);	document.getElementById("passError").innerHTML = '<b>' + strength + '</b>';	document.getElementById("passStrength").innerHTML = '<div id="Bar"></div>';	progressBar = document.getElementById("Bar");	switch (strength) 	{	case "Too Short":		progressBar.innerHTML = "<div id=\"progressBar\" style=\"width:10%;background:red;\"/>";		break;	case "Fair":		progressBar.innerHTML = "<div id=\"progressBar\" style=\"width:40%;background:yellow;\"/>";		break;	case "Medium":		progressBar.innerHTML = "<div id=\"progressBar\" style=\"width:80%;background:white;\"/>";		break;	case "Strong":		progressBar.innerHTML = "<div id=\"progressBar\" style=\"width:100%;background:green;\"/>";		break;	}}function dinamic2PassV() {	p = document.getElementById("password").value;	p2 = document.getElementById("password2").value;		if (checkPass(p, p2)) 	{		if (p == "" && p2 == "") 		{			document.getElementById("password2").className = "";		}		else 		{			document.getElementById("password2").className = "dinamicError";		}	}	else 	{		document.getElementById("password2").className = "dinamicVal";		document.getElementById("p2label").className = "none";	}}function dinamic3PassV() {	p = document.getElementById("oldpassword").value;		if (_checkPass(p)) 	{		if (p == "") 		{			document.getElementById("oldpassword").className = "";		}		else 		{			document.getElementById("oldpassword").className = "dinamicError";		}	}	else 	{		document.getElementById("oldpassword").className = "dinamicVal";		document.getElementById("p0label").className = "none";	}}// Validacion dinamica del emailfunction dinamicEmailV() {	e = document.getElementById("email").value;	if (checkMail(e)) 	{		if (e == "") 		{			document.getElementById("email").className = "";		}		else 		{			document.getElementById("email").className = "dinamicError";		}	}	else 	{		document.getElementById("email").className = "dinamicVal";		document.getElementById("p1label").className = "none";	}}// Comprueba la fortaleza de una contraseñafunction checkStrength(p) {	if (p == "") 	{		return "Empty";	}	// Longitud menos que 6	if (p.length < 6) 	{		return "Too Short";	}	// Longitud entre 6 y 8	if (p.length < 8) 	{		return "Fair";	}	// Longitud entre mayor que 8 y o letras o números pero no mezclas	reg1 = /^([A-Za-z]*|[0-9]*)$/;		if (p.length >= 8 && reg1.test(p)) 	{		return "Medium";	}	// Longitud mayor que 8 y mezcla de letras y números	reg2 = /^[A-Za-z0-9\/-]*$/;	if (p.length >= 8 && reg2.test(p)) 	{		return "Strong";	}	else 	{		return "Invalid";	}}